Replication can have a big influence on the maintainability of code. View the slides and video above to find out about the nature and impact of replication. With the knowledge gained from the above, consider <a href="code/NaiveCalculator/NaiveCalculator.java" target="_blank">this naive implementation</a> of a command line calculator. It contains a lot of replication and inelegant code - see if you can identify any ways you might be able to factor out common code into a reusable methods (and by so doing avoid replication). Once you have some ideas on how you would do this, take a look at <a href="code/RefinedCalculator/RefinedCalculator.java" target="_blank" onclick="alert('You did at least *try* to come up with some improvements - right ? I mean, you didnt just click on this link to see the solution straight way ?\n\nNo, of course not - what WAS I thinking !\n\n\nP.S. You might need to enable pop-ups for this page to view the solution');">this more refined solution</a> as a possible approach for avoiding replication.
