Any database system must be able to persistently store data (otherwise it will lose everything each time it is restarted).
In this assignment, you will use your file system for this purpose.
Your database will consist of a number of tables (aka **entities**), each containing a collection of rows
that store **records** - see the table shown later in this section for an example.

Each table should be stored in a separate file using tab separated text. A <a href="resources/people.tab" target="_blank">sample data file</a>
has been provided to illustrate this file format. Note that the constructor method of the `DBServer` class from the project template
initialises a `storageFolderPath` variable - this is the directory where your server should store its data files. It is essential that you store ALL of
your database files in this directory and nowhere else outside of it.

The first column in each table must contain a unique identifier or **primary key** (which should always be called `id`).
The `id` value of each row will NOT be provided by the user, but rather they should be automatically generated by the server.

Table names should be case insensitive (since some file systems have problems differentiating between upper and lower case).
Any table names provided by the user should be converted into lowercase before saving out to the filesystem.
You should treat column names as case insensitive for querying, but you should _preserve_ the case when storing them
(so that the user can make use of CamelCase if they wish).